發現pytorch3D camera default 的 FOV 是 60
但是 dreamfusion default 則是 20
=> fov 改 60 試試看

簡單場景 mse
- random radius [2,3]
- 固定 fov 60
- random 相機視角
- mse + depth loss
- opacity loss
- 固定 黑色背景
- 固定 ratio 後的 shading & albedo

CUDA_VISIBLE_DEVICES=4 \
python main.py --text "a landscape,hdr,masterpiece,64k" -O \
--latent_iter_ratio 0.2 --radius_range 2 3 \
--theta_range 30 105 --iters 20000 --lambda_depth 1 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/simple.png \
--test_interval 20 --lambda_opacity 0.001 \
--workspace trial/trial_simple_randcam_randradius_fixshade_fov60_mse

- 固定 相機視角

CUDA_VISIBLE_DEVICES=0 \
python main.py --text "a landscape,hdr,masterpiece,64k" -O \
--latent_iter_ratio 0.2 --radius_range 2 3 \
--theta_range 30 105 --iters 20000 --lambda_depth 1 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/simple.png \
--test_interval 20 --lambda_opacity 0.001 \
--fixed_camera \
--workspace trial/trial_simple_fixcam_fixshade_fov60_mse

#  真的是這個問題 simple + mse 解決 !!!  #

" ===================================================================================== "

嘗試使用 SDS loss 

簡單場景 
- random radius [2,3]
- 固定 fov 60
- random 相機視角
- SDS + depth loss
- opacity loss
- 固定 黑色背景
- 固定 ratio 後的 shading & albedo

CUDA_VISIBLE_DEVICES=4 \
python main.py --text "a landscape,hdr,masterpiece,64k" -O \
--latent_iter_ratio 0.2 --radius_range 2 3 \
--theta_range 30 105 --iters 20000 --lambda_depth 1 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/simple.png \
--test_interval 20 --lambda_opacity 0.001 \
--workspace trial/trial_simple_randcam_randradius_fixshade_fov60_sds


" ===================================================================================== "

因為 SD 產生的背景我應該不太在意
所以可以試試根據 depth map , 得到前景的mask
並根據mask 只計算前景loss

簡單場景 
- random radius [2,3]
- 固定 fov 60
- random 相機視角
- SDS + depth loss
- opacity loss
- 固定 黑色背景
- 固定 ratio 後的 shading & albedo
- 只計算SDS前景loss

CUDA_VISIBLE_DEVICES=3 \
python main.py --text "a landscape,hdr,masterpiece,64k" -O \
--latent_iter_ratio 0.2 --radius_range 2 3 \
--theta_range 30 105 --iters 20000 --lambda_depth 1 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/simple.png \
--test_interval 20 --lambda_opacity 0.001 \
--workspace trial/trial_simple_fixshade_fgloss_sds

" ===================================================================================== "

複雜場景 mse

CUDA_VISIBLE_DEVICES=5 \
python main.py --text "a landscape,hdr,masterpiece,64k" -O \
--latent_iter_ratio 0.2 --radius_range 2 3 \
--theta_range 30 105 --iters 20000 --lambda_depth 1 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/heightmap.png \
--test_interval 20 --lambda_opacity 0.001 \
--workspace trial/trial_complex_mse

" ===================================================================================== "

目前使用SDS train 不起來
先嘗試看看固定一個相機位置
看使用 depth condition 的 SDS loss 是否可行

簡單場景 
- fix radius [2]
- 固定 fov 60
- 固定一個 相機視角
- SDS + depth loss
- opacity loss
- 固定 黑色背景
- 固定 ratio 後的 shading & albedo
- 只計算SDS前景loss

CUDA_VISIBLE_DEVICES=4 \
python main.py --text "a landscape,hdr,masterpiece,64k" -O \
--latent_iter_ratio 0.2 --radius_range 2 3 \
--theta_range 30 105 --iters 20000 --lambda_depth 1 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/simple.png \
--test_interval 20 --lambda_opacity 0.001 \
--one_camera \
--workspace trial/trial_simple_onecam_fgloss_sds

複雜場景

CUDA_VISIBLE_DEVICES=4 \
python main.py --text "a landscape,hdr,masterpiece,64k" -O \
--latent_iter_ratio 0.2 --radius_range 2 3 \
--theta_range 30 105 --iters 20000 --lambda_depth 1 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/heightmap.png \
--test_interval 20 --lambda_opacity 0.001 \
--one_camera \
--workspace trial/trial_complex_onecam_fgloss_sds

複雜場景

- 不計算depth loss

CUDA_VISIBLE_DEVICES=7 \
python main.py --text "a landscape,hdr,masterpiece,64k" -O \
--latent_iter_ratio 0.2 --radius_range 2 3 \
--theta_range 30 105 --iters 20000 --lambda_depth 0 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/heightmap.png \
--test_interval 20 --lambda_opacity 0.001 \
--one_camera \
--workspace trial/trial_complex_onecam_fgloss_nodepth_sds

複雜場景

- guidance 100 -> 7.5

CUDA_VISIBLE_DEVICES=5 \
python main.py --text "a landscape,hdr,masterpiece,64k" -O \
--latent_iter_ratio 0.2 --radius_range 2 3 \
--theta_range 30 105 --iters 20000 --lambda_depth 1 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/heightmap.png \
--test_interval 20 --lambda_opacity 0.001 \
--one_camera --guidance_scale 7.5 \
--workspace trial/trial_complex_onecam_fgloss_lowguide_sds


複雜場景

考慮到已經有geometry, 或許可以只取比較小的step 來補充細節, 而不要影響整體形狀

- t_range [0.2,0.98] -> [0.1,0.6]

CUDA_VISIBLE_DEVICES=5 \
python main.py --text "a landscape,hdr,masterpiece,64k" -O \
--latent_iter_ratio 0.2 --radius_range 2 3 \
--theta_range 30 105 --iters 20000 --lambda_depth 1 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/heightmap.png \
--test_interval 20 --lambda_opacity 0.001 \
--one_camera --t_range 0.1 0.6 \
--workspace trial/trial_complex_onecam_fgloss_smallstep_sds

複雜場景

加強depth loss 的 權重, 讓nerf 優先render 出好的形狀後在補細節

- t_range [0.2,0.98] -> [0.1,0.8]
- lambda_depth 1 -> 10

CUDA_VISIBLE_DEVICES=4 \
python main.py --text "a landscape,hdr,masterpiece,64k" -O \
--latent_iter_ratio 0.2 --radius_range 2 3 \
--theta_range 30 105 --iters 20000 --lambda_depth 10 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/heightmap.png \
--test_interval 20 --lambda_opacity 0.001 \
--one_camera --t_range 0.1 0.8 \
--workspace trial/trial_complex_onecam_fgloss_bigdepthloss_sds

複雜場景

看在one cam 下只訓練depth 可不可以

- depth only

CUDA_VISIBLE_DEVICES=4 \
python main.py --text "a landscape,hdr,masterpiece,64k" -O \
--latent_iter_ratio 0.2 --radius_range 2 3 \
--theta_range 30 105 --iters 20000 --lambda_depth 1 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/heightmap.png \
--test_interval 20 --lambda_opacity 0.001 \
--one_camera \
--workspace trial/trial_complex_onecam_depthonly


前面one cam depth only 深度有點怪, 看看是不是one cam的問題
- depth only
- 多視角

CUDA_VISIBLE_DEVICES=4 \
python main.py --text "a landscape,hdr,masterpiece,64k" -O \
--latent_iter_ratio 0.2 --radius_range 2 3 \
--theta_range 30 105 --iters 20000 --lambda_depth 1 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/heightmap.png \
--test_interval 20 --lambda_opacity 0.001 \
--workspace trial/trial_complex_depthonly

=> 好像是, 可能one cam 訓練有極限?

" ===================================================================================== "

暫時放棄one cam

複雜場景 sds
- random radius [2,3]
- 固定 fov 60
- random 相機視角
- SDS + depth loss
- opacity loss
- 固定 黑色背景
- 原本的 shading
- 只計算SDS前景loss
- t_range [0.1,0.7]
- lambda_depth 2

CUDA_VISIBLE_DEVICES=4 \
python main.py --text "a landscape,hdr,masterpiece,64k" -O \
--latent_iter_ratio 0.2 --radius_range 2 3 \
--theta_range 30 105 --iters 20000 --lambda_depth 2 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/heightmap.png \
--test_interval 20 --lambda_opacity 0.001 \
--t_range 0.1 0.7 \
--workspace trial/trial_complex_sds

- 正常 t_range
- 簡短的text prompt
" ===================================================================================== "

standard

完全正常的版本

CUDA_VISIBLE_DEVICES=4 \
python main.py --text "a landscape" -O \
--latent_iter_ratio 0.2 --radius_range 2 3 \
--theta_range 30 105 --iters 20000 --lambda_depth 2 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/heightmap.png \
--test_interval 20 --lambda_opacity 0.001 \
--workspace trial/trial_complex_sds

- 小範圍的theta
" ===================================================================================== "

base on standard

+ one camera

CUDA_VISIBLE_DEVICES=5 \
python main.py --text "a landscape" -O \
--latent_iter_ratio 0.2 --radius_range 2 3 \
--theta_range 60 80 --iters 20000 --lambda_depth 2 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/heightmap.png \
--test_interval 20 --lambda_opacity 0.001 \
--workspace trial/trial_complex_lowtheta_sds

同上, 但是改變depth GT 位置

CUDA_VISIBLE_DEVICES=7 \
python main.py --text "a landscape" -O \
--latent_iter_ratio 0.2 --radius_range 2 3 \
--theta_range 60 80 --iters 20000 --lambda_depth 2 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/heightmap.png \
--test_interval 20 --lambda_opacity 0.001 \
--workspace trial/trial_complex_lowtheta_changedepth_sds

#  真的是 depth GT 出錯, 他在傳入SD function 後被改到了 #

" ===================================================================================== "

重新實驗
base on standard

+ progressive sds loss

一開始 sds loss weight 設很小
為了是讓nerf 可以盡量保持原有形狀
之後逐步增大sds loss weight, 將 texture 增加上去

加強depth loss 權重

複雜場景

加強depth loss 的 權重, 讓nerf 優先render 出好的形狀後在補細節

- t_range [0.2,0.98] -> [0.1,0.8]
- lambda_depth 1 -> 10

CUDA_VISIBLE_DEVICES=4 \
python main.py --text "landscape" -O \
--latent_iter_ratio 0.2 --radius_range 2 3 \
--theta_range 30 105 --iters 20000 --lambda_depth 10 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/heightmap.png \
--test_interval 20 --lambda_opacity 0.001 \
--t_range 0.1 0.8 \
--workspace trial/trial_complex_bigdepthloss_sds

CUDA_VISIBLE_DEVICES=4 \
python main.py --text "landscape" -O \
--latent_iter_ratio 0.2 --radius_range 2 3 \
--theta_range 30 105 --iters 20000 --lambda_depth 10 \
--progressive_SDS \
--workspace trial/trial_complex_progressive_sds

" ===================================================================================== "

base on standard

+ texture net

增加一個 texture mlp, 希望網路在更新時可以專注更新這個texture net
而不要影響到 sigma net

CUDA_VISIBLE_DEVICES=7 \
python main.py --text "a landscape,hdr,masterpiece,64k" -O \
--latent_iter_ratio 0.2 --radius_range 2 3 \
--theta_range 30 105 --iters 10000 --lambda_depth 1 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/heightmap.png \
--test_interval 20 --lambda_opacity 0.001 \
--texture_net \
--workspace trial/trial_complex_texturenet_sds


" ===================================================================================== "

base on standard

+ small range

希望使用比較小的 SD t 訓練比較不會影響到geometry
而是能專注在生成細節上

CUDA_VISIBLE_DEVICES=8 \
python main.py --text "a landscape,hdr,masterpiece,64k" -O \
--latent_iter_ratio 0.2 --radius_range 2 3 \
--theta_range 30 105 --iters 20000 --lambda_depth 1 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/heightmap.png \
--test_interval 20 --lambda_opacity 0.001 \
--t_range 0.1 0.6 \
--workspace trial/trial_complex_bigdepthloss_sds


--workspace trial/trial_complex_smallrange_sds

" ===================================================================================== "

base on standard

+ texture net
+ progressive_SDS

CUDA_VISIBLE_DEVICES=6 \
python main.py --text "a landscape,hdr,masterpiece,64k" -O \
--latent_iter_ratio 0.2 --radius_range 2 3 \
--theta_range 30 105 --iters 20000 --lambda_depth 1 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/heightmap.png \
--test_interval 20 --lambda_opacity 0.001 \
--texture_net --progressive_SDS \
--workspace trial/trial_complex_texturenet_progressive_sds

" ===================================================================================== "

base on standard

+ texture net
+ progressive_SDS
+ 0 iter ratio

因為原本就有geometry prior,
應該就不需要像原本的做法先訓練形狀

CUDA_VISIBLE_DEVICES=4 \
python main.py --text "a landscape,hdr,masterpiece,64k" -O \
--latent_iter_ratio 0 --radius_range 2 3 \
--theta_range 30 105 --iters 20000 --lambda_depth 1 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/heightmap.png \
--test_interval 20 --lambda_opacity 0.001 \
--texture_net --progressive_SDS \
--workspace trial/trial_complex_texturenet_progressive_0iter_sds

" ===================================================================================== "

base on standard

+ texture net
+ progressive_SDS
+ 0 iter ratio
+ precise text prompt

因為原本就有geometry prior,
應該就不需要像原本的做法先訓練形狀

CUDA_VISIBLE_DEVICES=4 \
python main.py --text "nature scene, rocks,hill,grass,trees,river" -O \
--latent_iter_ratio 0 --radius_range 2 3 \
--theta_range 30 105 --iters 20000 --lambda_depth 1 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/heightmap.png \
--test_interval 20 --lambda_opacity 0.001 \
--texture_net --progressive_SDS \
--workspace trial/trial_complex_texturenet_progressive_0iter_preciseprompt_sds

CUDA_VISIBLE_DEVICES=4 \
python main.py --text "nature scene, rocks,snow,ice,bright,mountains" -O \
--latent_iter_ratio 0 --radius_range 2 3 \
--theta_range 30 105 --iters 10000 --lambda_depth 1 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/heightmap.png \
--test_interval 20 --lambda_opacity 0.001 \
--texture_net --progressive_SDS \
--workspace trial/trial_complex_snow_sds

" ===================================================================================== "

base on standard

+ small sds weight (5e-4)
+ 0 iter ratio

看看單純將sds 縮小能不能在保持形狀的同時上色

CUDA_VISIBLE_DEVICES=7 \
python main.py --text "a landscape,hdr,masterpiece,64k" -O \
--latent_iter_ratio 0 --radius_range 2 3 \
--theta_range 30 105 --iters 20000 --lambda_depth 1 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/heightmap.png \
--test_interval 20 --lambda_opacity 0.001 \
--workspace trial/trial_complex_justsmallweight_sds

" ===================================================================================== "

base on standard

+ sds weight (5e-3)
+ 0.15 iter ratio

看 sds weight 對於上色的影響
修改 iter ratio, 代表只看depth的部分

CUDA_VISIBLE_DEVICES=9 \
python main.py --text "a landscape,hdr,masterpiece,64k" -O \
--latent_iter_ratio 0.15 --radius_range 2 3 \
--theta_range 30 105 --iters 10000 --lambda_depth 1 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/heightmap.png \
--test_interval 20 --lambda_opacity 0.001 \
--lambda_sds 5e-2 \
--workspace trial/trial_complex_weight5e2_sds

=> 實驗後看起來sds weight 設成大概 3e3 好像是比較合理的選擇

" ===================================================================================== "

CUDA_VISIBLE_DEVICES=3 \
python main.py --text "rocky,cliff,weeds,sunset" -O \
--latent_iter_ratio 0.15 --radius_range 2 3 \
--theta_range 30 105 --iters 10000 --lambda_depth 1 \
--fovy_range 60 60 --default_fovy 60 \
--heightmap_path BEV/heightmap.png \
--test_interval 20 --lambda_opacity 0.001 \
--lambda_sds 3e-3 \
--workspace trial/trial_complex_desert3e3_sds

" ===================================================================================== "

試試fov20 訓練的效果

CUDA_VISIBLE_DEVICES=7 \
python main.py --text "nature scene, rocks,hill,grass,trees,river" -O \
--latent_iter_ratio 0.15 --radius_range 2 3 \
--theta_range 30 90 --iters 20000 --lambda_depth 1 \
--default_fovy 20 \
--heightmap_path BEV/heightmap.png \
--test_interval 20 --lambda_opacity 0.001 \
--lambda_sds 3e-3 \
--workspace trial/trial_complex_nature3e3_fov20_sds

CUDA_VISIBLE_DEVICES=4 \
python main.py --text "nature scene, Frigid, Snowy,tree, rock,Bright sunlight,A dreamlike scene,Crystal clear,Dazzling glare" -O \
--latent_iter_ratio 0.15 --radius_range 2 3 \
--theta_range 30 90 --iters 20000 --lambda_depth 1 \
--default_fovy 20 \
--heightmap_path BEV/heightmap.png \
--test_interval 20 --lambda_opacity 0.001 \
--lambda_sds 3e-3 \
--workspace trial/trial_complex_snow3e3_fov20_sds

